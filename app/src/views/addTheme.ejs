<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ZBR-log</title>
    <!-- CSS 연결 -->
    <link rel="stylesheet" href="css/basic.css">
    <link rel="stylesheet" href="css/addTheme.css">
</head>
<body>
    <div class="bg">
        <!-- 왼쪽 입력 폼 영역 -->
        <section class="log-box">
            <!-- 테마 정보 입력 폼 -->
            <form id="theme-form" class="log-box">
                <input id="theme_name" name="theme_name" type="text" placeholder="테마 이름" class="input-form input-font" required />
                <input id="theme_code" name="theme_code" type="text" placeholder="테마 코드 (4자리)" class="input-form input-font" required maxlength="4" pattern="\d{4}" inputmode="numeric" />
                <input id="escape_time_minutes" name="escape_time_minutes" type="text" placeholder="탈출 제한 시간(분)" class="input-form input-font" required maxlength="2" pattern="\d{1,2}" inputmode="numeric" />
                <input id="available_hints" name="available_hints" type="text" placeholder="사용 가능 힌트 수" class="input-form input-font" required maxlength="1" pattern="\d{1}" inputmode="numeric" />
                <input id="monitoring_places" name="monitoring_places" type="text" placeholder="모니터링 장소 개수" class="input-form input-font" required maxlength="1" pattern="\d{1}" inputmode="numeric" />
                
                <!-- 맵 추가 버튼 -->
                <button type="button" id="add-map-btn" class="theme-add-btn">맵 추가</button>
                <input type="file" id="map-upload" accept=".jpg, .pdf" style="display: none;">
                
                <!-- 업로드된 파일 목록 -->
                <ul id="file-list" style="color: white; list-style: none; padding: 0;"></ul>

                <!-- 테마 추가 버튼 -->
                <button type="submit" id="save_theme" class="log-btn" disabled>테마 추가하기</button>
            </form>
        </section>

        <!-- 오른쪽 테마 목록 영역 -->
        <section class="theme-list-section">
            <h2 class="theme-list-title">등록된 테마 목록</h2>
            <div class="theme-list">
                <% if (typeof themes !== 'undefined' && themes.theme_name) { %>
                    <% for(let i = 0; i < themes.theme_name.length; i++) { %>
                        <div class="theme-item">
                            <h3><%= themes.theme_name[i] %></h3>
                            <p>테마 코드: <%= themes.theme_code[i] %></p>
                            <p>제한 시간: <%= themes.escape_time_minutes[i] %>분</p>
                            <p>힌트 수: <%= themes.available_hints[i] %></p>
                            <p>모니터링 장소: <%= themes.monitoring_places[i] %>곳</p>
                        </div>
                    <% } %>
                <% } else { %>
                    <p class="no-themes">등록된 테마가 없습니다.</p>
                <% } %>
            </div>
        </section>

        <!-- 팝업 (화면 중앙에 모달) -->
        <div class="popup-bg" id="mapPopup">
            <div class="popup">
                <div class="popup-header">
                    <h2>맵 추가</h2>
                    <span class="close-btn" id="closeMapPopup">&times;</span>
                </div>
                <div class="popup-content">
                    <div class="preview-container">
                        <img id="previewImg" alt="미리보기" />
                    </div>
                </div>
                <div class="popup-footer">
                    <button id="saveMapBtn">맵 저장</button>
                </div>
            </div>
        </div>
    </div>

    <script src="js/addTheme.js"></script>
    <script>
        // 기존 입력 필드 관련 코드
        const themeNameInput = document.getElementById('theme_name');
        const themeCodeInput = document.getElementById('theme_code');
        const escapeTimeInput = document.getElementById('escape_time_minutes');
        const hintsInput = document.getElementById('available_hints');
        const monitoringInput = document.getElementById('monitoring_places');
        const saveThemeBtn = document.getElementById('save_theme');

        // 숫자만 입력 가능하도록 처리하는 함수
        function onlyNumberInput(e) {
            // 백스페이스, Delete, 방향키 등은 허용
            if (e.key === 'Backspace' || e.key === 'Delete' || e.key === 'ArrowLeft' || e.key === 'ArrowRight') {
                return;
            }
            
            // 숫자가 아닌 경우 입력 취소
            if (!/^\d$/.test(e.key)) {
                e.preventDefault();
            }
            
            // 각 필드별 최대값 체크
            const value = e.target.value + e.key;
            
            if (e.target === escapeTimeInput && parseInt(value) > 99) {
                e.preventDefault();
            } else if ((e.target === hintsInput || e.target === monitoringInput) && value.length > 1) {
                e.preventDefault();
            } else if (e.target === themeCodeInput && value.length > 4) {
                e.preventDefault();
            }
        }

        // 붙여넣기 처리 함수
        function handlePaste(e) {
            const pastedData = e.clipboardData.getData('text');
            
            // 붙여넣은 데이터가 숫자가 아니면 취소
            if (!/^\d+$/.test(pastedData)) {
                e.preventDefault();
                return;
            }
            
            // 각 필드별 최대값 체크
            if (e.target === escapeTimeInput && parseInt(pastedData) > 99) {
                e.preventDefault();
            } else if ((e.target === hintsInput || e.target === monitoringInput) && pastedData.length > 1) {
                e.preventDefault();
            } else if (e.target === themeCodeInput && pastedData.length > 4) {
                e.preventDefault();
            }
        }

        // 숫자 입력 필드에 이벤트 리스너 추가
        [themeCodeInput, escapeTimeInput, hintsInput, monitoringInput].forEach(input => {
            input.addEventListener('keypress', onlyNumberInput);
            input.addEventListener('paste', handlePaste);
        });

        // 모든 입력 필드를 배열로 저장
        const inputs = [themeNameInput, themeCodeInput, escapeTimeInput, hintsInput, monitoringInput];

        // 입력 필드 변경 감지 함수
        function checkInputs() {
            const allFilled = inputs.every(input => input.value.trim() !== '');
            saveThemeBtn.disabled = !allFilled;

            if (allFilled) {
                saveThemeBtn.style.backgroundColor = '#3CA96F';
                saveThemeBtn.style.cursor = 'pointer';
            } else {
                saveThemeBtn.style.backgroundColor = '#909090';
                saveThemeBtn.style.cursor = 'not-allowed';
            }
        }

        // 각 입력 필드에 이벤트 리스너 추가
        inputs.forEach(input => {
            input.addEventListener('input', checkInputs);
        });

        // 페이지 로드 시 초기 상태 설정
        checkInputs();
    </script>
</body>
</html>
